From: Debian Java Maintainers <pkg-java-maintainers@lists.alioth.debian.org>
Date: Wed, 29 Nov 2017 15:16:43 +0100
Subject: eclipse aether

Maven module originally uses aether which is deprecated. This patch changes it
to use eclipse-aether/maven-resolver.

Forwarded: no
---
 gradle/dependencies.gradle                         | 10 +++----
 .../internal/maven/MavenProjectsCreator.java       |  4 +--
 .../action/AbstractMavenPublishAction.java         | 33 +++++++++++----------
 .../action/LoggingMavenTransferListener.java       |  6 ++--
 .../maven/internal/action/MavenDeployAction.java   | 34 ++++++++++++----------
 .../maven/internal/action/MavenInstallAction.java  | 10 +++----
 .../internal/action/SnapshotVersionManager.java    | 18 ++++++------
 7 files changed, 61 insertions(+), 54 deletions(-)

--- a/gradle/dependencies.gradle
+++ b/gradle/dependencies.gradle
@@ -153,11 +153,11 @@
     dependency 'org.apache.maven.wagon:wagon-http-shared4:2.4@jar'
 
     //eather:
-    dependency "org.sonatype.aether:aether-api:1.13.1@jar"
-    dependency "org.sonatype.aether:aether-impl:1.13.1@jar"
-    dependency "org.sonatype.aether:aether-spi:1.13.1@jar"
-    dependency "org.sonatype.aether:aether-util:1.13.1@jar"
-    dependency 'org.sonatype.aether:aether-connector-wagon:1.13.1@jar'
+    dependency 'org.apache.maven.resolver:maven-resolver-api:1.13.1@jar'
+    dependency 'org.apache.maven.resolver:maven-resolver-impl:1.13.1@jar'
+    dependency 'org.apache.maven.resolver:maven-resolver-spi:1.13.1@jar'
+    dependency 'org.apache.maven.resolver:maven-resolver-util:1.13.1@jar'
+    dependency 'org.apache.maven.resolver:maven-resolver-connector-basic:1.13.1@jar'
 }
 
 libraries.spock = [
--- a/subprojects/maven/src/main/java/org/gradle/api/publication/maven/internal/action/AbstractMavenPublishAction.java
+++ b/subprojects/maven/src/main/java/org/gradle/api/publication/maven/internal/action/AbstractMavenPublishAction.java
@@ -18,7 +18,7 @@
 
 import org.apache.maven.model.Model;
 import org.apache.maven.model.io.xpp3.MavenXpp3Reader;
-import org.apache.maven.repository.internal.MavenRepositorySystemSession;
+import org.apache.maven.repository.internal.MavenRepositorySystemUtils;
 import org.apache.maven.repository.internal.SnapshotMetadataGeneratorFactory;
 import org.apache.maven.repository.internal.VersionsMetadataGeneratorFactory;
 import org.codehaus.plexus.DefaultContainerConfiguration;
@@ -30,16 +30,16 @@
 import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
 import org.gradle.api.GradleException;
 import org.gradle.internal.UncheckedException;
-import org.sonatype.aether.RepositoryException;
-import org.sonatype.aether.RepositorySystem;
-import org.sonatype.aether.RepositorySystemSession;
-import org.sonatype.aether.artifact.Artifact;
-import org.sonatype.aether.artifact.ArtifactType;
-import org.sonatype.aether.impl.Deployer;
-import org.sonatype.aether.impl.internal.DefaultDeployer;
-import org.sonatype.aether.impl.internal.SimpleLocalRepositoryManager;
-import org.sonatype.aether.util.DefaultRepositorySystemSession;
-import org.sonatype.aether.util.artifact.DefaultArtifact;
+import org.eclipse.aether.RepositoryException;
+import org.eclipse.aether.RepositorySystem;
+import org.eclipse.aether.RepositorySystemSession;
+import org.eclipse.aether.artifact.Artifact;
+import org.eclipse.aether.artifact.ArtifactType;
+import org.eclipse.aether.impl.Deployer;
+import org.eclipse.aether.internal.impl.DefaultDeployer;
+import org.eclipse.aether.repository.LocalRepository;
+import org.eclipse.aether.DefaultRepositorySystemSession;
+import org.eclipse.aether.artifact.DefaultArtifact;
 
 import java.io.File;
 import java.io.FileReader;
@@ -60,9 +60,8 @@
 
     protected AbstractMavenPublishAction(File pomFile, List<File> wagonJars) {
         container = newPlexusContainer(wagonJars);
-        session = new MavenRepositorySystemSession();
+        session = MavenRepositorySystemUtils.newSession();
         session.setTransferListener(new LoggingMavenTransferListener());
-        session.getConfigProperties().put("maven.metadata.legacy", "true");
 
         Model pom = parsePom(pomFile);
         pomArtifact = new DefaultArtifact(pom.getGroupId(), pom.getArtifactId(), "pom", pom.getVersion()).setFile(pomFile);
@@ -70,7 +69,11 @@
     }
 
     public void setLocalMavenRepositoryLocation(File localMavenRepository) {
-        session.setLocalRepositoryManager(new SimpleLocalRepositoryManager(localMavenRepository));
+        try {
+            session.setLocalRepositoryManager(new org.eclipse.aether.internal.impl.SimpleLocalRepositoryManagerFactory().newInstance(session, new LocalRepository(localMavenRepository)));
+        } catch (org.eclipse.aether.repository.NoLocalRepositoryManagerException e) {
+            throw UncheckedException.throwAsUncheckedException(e);
+        }
     }
 
     public void setMainArtifact(File file) {
@@ -131,7 +134,7 @@
             // This is a workaround for https://issues.gradle.org/browse/GRADLE-3324.
             // Somehow the ArrayList 'result' in `org.sonatype.aether.impl.internal.Utils#sortMetadataGeneratorFactories` ends up
             // being a list of nulls on windows and IBM's 1.6 JDK.
-            deployer.setMetadataFactories(null);
+            deployer.setMetadataGeneratorFactories(null);
             deployer.addMetadataGeneratorFactory(new VersionsMetadataGeneratorFactory());
             deployer.addMetadataGeneratorFactory(new SnapshotMetadataGeneratorFactory());
             deployer.addMetadataGeneratorFactory(snapshotVersionManager);
--- a/subprojects/maven/src/main/java/org/gradle/api/publication/maven/internal/action/LoggingMavenTransferListener.java
+++ b/subprojects/maven/src/main/java/org/gradle/api/publication/maven/internal/action/LoggingMavenTransferListener.java
@@ -18,9 +18,9 @@
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
-import org.sonatype.aether.transfer.AbstractTransferListener;
-import org.sonatype.aether.transfer.TransferEvent;
-import org.sonatype.aether.transfer.TransferEvent.RequestType;
+import org.eclipse.aether.transfer.AbstractTransferListener;
+import org.eclipse.aether.transfer.TransferEvent;
+import org.eclipse.aether.transfer.TransferEvent.RequestType;
 
 class LoggingMavenTransferListener extends AbstractTransferListener {
     private static final Logger LOGGER = LoggerFactory.getLogger(LoggingMavenTransferListener.class);
--- a/subprojects/maven/src/main/java/org/gradle/api/publication/maven/internal/action/MavenDeployAction.java
+++ b/subprojects/maven/src/main/java/org/gradle/api/publication/maven/internal/action/MavenDeployAction.java
@@ -19,14 +19,14 @@
 import org.gradle.api.GradleException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
-import org.sonatype.aether.RepositorySystem;
-import org.sonatype.aether.RepositorySystemSession;
-import org.sonatype.aether.artifact.Artifact;
-import org.sonatype.aether.deployment.DeployRequest;
-import org.sonatype.aether.deployment.DeploymentException;
-import org.sonatype.aether.repository.Authentication;
-import org.sonatype.aether.repository.Proxy;
-import org.sonatype.aether.util.repository.DefaultProxySelector;
+import org.eclipse.aether.RepositorySystem;
+import org.eclipse.aether.RepositorySystemSession;
+import org.eclipse.aether.artifact.Artifact;
+import org.eclipse.aether.deployment.DeployRequest;
+import org.eclipse.aether.deployment.DeploymentException;
+import org.eclipse.aether.repository.Authentication;
+import org.eclipse.aether.repository.Proxy;
+import org.eclipse.aether.util.repository.DefaultProxySelector;
 
 import java.io.File;
 import java.util.Collection;
@@ -57,7 +57,7 @@
             throw new GradleException("Must specify a repository for deployment");
         }
 
-        org.sonatype.aether.repository.RemoteRepository aetherRepo = createRepository(gradleRepo);
+        org.eclipse.aether.repository.RemoteRepository aetherRepo = createRepository(gradleRepo);
 
         DeployRequest request = new DeployRequest();
         request.setRepository(aetherRepo);
@@ -69,22 +69,26 @@
         repositorySystem.deploy(session, request);
     }
 
-    private org.sonatype.aether.repository.RemoteRepository createRepository(RemoteRepository gradleRepo) {
-        org.sonatype.aether.repository.RemoteRepository repo = new org.sonatype.aether.repository.RemoteRepository("remote", gradleRepo.getLayout(), gradleRepo.getUrl());
+    private org.eclipse.aether.repository.RemoteRepository createRepository(RemoteRepository gradleRepo) {
+        org.eclipse.aether.repository.RemoteRepository.Builder repo = new org.eclipse.aether.repository.RemoteRepository.Builder("remote", gradleRepo.getLayout(), gradleRepo.getUrl());
 
         org.apache.maven.artifact.ant.Authentication auth = gradleRepo.getAuthentication();
         if (auth != null) {
-            repo.setAuthentication(new Authentication(auth.getUserName(), auth.getPassword(), auth.getPrivateKey(), auth.getPassphrase()));
+            org.eclipse.aether.util.repository.AuthenticationBuilder authBuilder = new org.eclipse.aether.util.repository.AuthenticationBuilder();
+            authBuilder.addUsername(auth.getUserName()).addPassword(auth.getPassword()).addPrivateKey(auth.getPrivateKey(), auth.getPassphrase());
+            repo.setAuthentication(authBuilder.build());
         }
 
         org.apache.maven.artifact.ant.Proxy proxy = gradleRepo.getProxy();
         if (proxy != null) {
             DefaultProxySelector proxySelector = new DefaultProxySelector();
-            Authentication proxyAuth = new Authentication(proxy.getUserName(), proxy.getPassword());
+            org.eclipse.aether.util.repository.AuthenticationBuilder authBuilder = new org.eclipse.aether.util.repository.AuthenticationBuilder();
+            authBuilder.addUsername(proxy.getUserName()).addPassword(proxy.getPassword());
+            Authentication proxyAuth = authBuilder.build();
             proxySelector.add(new Proxy(proxy.getType(), proxy.getHost(), proxy.getPort(), proxyAuth), proxy.getNonProxyHosts());
-            repo.setProxy(proxySelector.getProxy(repo));
+            repo.setProxy(proxySelector.getProxy(repo.build()));
         }
 
-        return repo;
+        return repo.build();
     }
 }
--- a/subprojects/maven/src/main/java/org/gradle/api/publication/maven/internal/action/MavenInstallAction.java
+++ b/subprojects/maven/src/main/java/org/gradle/api/publication/maven/internal/action/MavenInstallAction.java
@@ -15,11 +15,11 @@
  */
 package org.gradle.api.publication.maven.internal.action;
 
-import org.sonatype.aether.RepositorySystem;
-import org.sonatype.aether.RepositorySystemSession;
-import org.sonatype.aether.artifact.Artifact;
-import org.sonatype.aether.installation.InstallRequest;
-import org.sonatype.aether.installation.InstallationException;
+import org.eclipse.aether.RepositorySystem;
+import org.eclipse.aether.RepositorySystemSession;
+import org.eclipse.aether.artifact.Artifact;
+import org.eclipse.aether.installation.InstallRequest;
+import org.eclipse.aether.installation.InstallationException;
 
 import java.io.File;
 import java.util.Collection;
--- a/subprojects/maven/src/main/java/org/gradle/api/publication/maven/internal/action/SnapshotVersionManager.java
+++ b/subprojects/maven/src/main/java/org/gradle/api/publication/maven/internal/action/SnapshotVersionManager.java
@@ -16,13 +16,13 @@
 
 package org.gradle.api.publication.maven.internal.action;
 
-import org.sonatype.aether.RepositorySystemSession;
-import org.sonatype.aether.artifact.Artifact;
-import org.sonatype.aether.deployment.DeployRequest;
-import org.sonatype.aether.impl.MetadataGenerator;
-import org.sonatype.aether.impl.MetadataGeneratorFactory;
-import org.sonatype.aether.installation.InstallRequest;
-import org.sonatype.aether.metadata.Metadata;
+import org.eclipse.aether.RepositorySystemSession;
+import org.eclipse.aether.artifact.Artifact;
+import org.eclipse.aether.deployment.DeployRequest;
+import org.eclipse.aether.impl.MetadataGenerator;
+import org.eclipse.aether.impl.MetadataGeneratorFactory;
+import org.eclipse.aether.installation.InstallRequest;
+import org.eclipse.aether.metadata.Metadata;
 
 import java.util.Collection;
 import java.util.Collections;
@@ -35,8 +35,8 @@
     }
 
     @Override
-    public int getPriority() {
-        return -100;
+    public float getPriority() {
+        return -100.0F;
     }
 
     @Override
--- a/subprojects/build-init/src/main/java/org/gradle/buildinit/plugins/internal/maven/MavenProjectsCreator.java
+++ b/subprojects/build-init/src/main/java/org/gradle/buildinit/plugins/internal/maven/MavenProjectsCreator.java
@@ -29,8 +29,8 @@
 import org.codehaus.plexus.classworlds.ClassWorld;
 import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
 import org.codehaus.plexus.configuration.PlexusConfigurationException;
-import org.sonatype.aether.RepositorySystemSession;
-import org.sonatype.aether.util.DefaultRepositorySystemSession;
+import org.eclipse.aether.RepositorySystemSession;
+import org.eclipse.aether.DefaultRepositorySystemSession;
 import org.gradle.util.CollectionUtils;
 
 import java.io.File;
